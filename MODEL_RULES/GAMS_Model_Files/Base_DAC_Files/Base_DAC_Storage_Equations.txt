=start
Q_STORAGE_GENERATING_START(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) EQ 1)..
STORAGE_LEVEL(CONVENTIONAL_STORAGE_GEN,INTERVAL) =E= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"INITIAL_STORAGE")
;
=end
=start
Q_STORAGE_GENERATING(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) GT 1)..
STORAGE_LEVEL(CONVENTIONAL_STORAGE_GEN,INTERVAL) =E= STORAGE_LEVEL(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)
         - DACINTERVAL_LENGTH*GEN_EFFICIENCY(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)
         + DACINTERVAL_LENGTH*PUMP_EFFICIENCY(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)
;
=end
=start
Q_STORAGE_GENERATING_END(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) EQ CARD(INTERVAL))..
ENDING_STORAGE(CONVENTIONAL_STORAGE_GEN) =E= STORAGE_LEVEL(CONVENTIONAL_STORAGE_GEN,INTERVAL) - DACINTERVAL_LENGTH*GEN_EFFICIENCY(CONVENTIONAL_STORAGE_GEN,INTERVAL) + DACINTERVAL_LENGTH*PUMP_EFFICIENCY(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_STORAGE_END(CONVENTIONAL_STORAGE_GEN)$(STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"ENFORCE_FINAL_STORAGE") EQ 1)..
ENDING_STORAGE(CONVENTIONAL_STORAGE_GEN) =E= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"FINAL_STORAGE") + END_STORAGE_PENALTY_PLUS(CONVENTIONAL_STORAGE_GEN) - END_STORAGE_PENALTY_MINUS(CONVENTIONAL_STORAGE_GEN)
;
=end
=start
Q_GENPUMP(CONVENTIONAL_STORAGE_GEN,INTERVAL)..
PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL) =L= 1 - UNIT_STATUS(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_PUMPMAXLIMIT(CONVENTIONAL_STORAGE_GEN,INTERVAL)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) =L= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MAX_PUMP")*PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_PUMPMINLIMIT(CONVENTIONAL_STORAGE_GEN,INTERVAL)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) =G= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_STORAGE_MAX(STORAGE_GEN,INTERVAL)..
STORAGE_LEVEL(STORAGE_GEN,INTERVAL) =L= STORAGEVALUE(STORAGE_GEN,"STORAGE_MAX") + WASTED_STORAGE(STORAGE_GEN,INTERVAL)
;
=end
=start
Q_PUMPMINLIMIT2(CONVENTIONAL_STORAGE_GEN,INTERVAL)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) -
         SUM(RESERVETYPE$(RESERVEVALUE(RESERVETYPE,"RESERVE_ON")EQ 1 AND (RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 1 OR RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 3)),
         GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE)) =G=         0
         + PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")
         - UNIT_STATUS(CONVENTIONAL_STORAGE_GEN,INTERVAL)*GENVALUE(CONVENTIONAL_STORAGE_GEN,"CAPACITY")
;
=end
=start
Q_PUMPMAXLIMIT2(CONVENTIONAL_STORAGE_GEN,INTERVAL)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) +
         SUM(RESERVETYPE$(RESERVEVALUE(RESERVETYPE,"RESERVE_ON")EQ 1 AND (RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 2 OR RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 3)),
         GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE))  =L=
         STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MAX_PUMP")*PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL) + UNIT_STATUS(CONVENTIONAL_STORAGE_GEN,INTERVAL)*GENVALUE(CONVENTIONAL_STORAGE_GEN,"CAPACITY")
;
=end