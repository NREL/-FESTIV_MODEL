=start
Q_PUMP_HARD_HI(GEN,INTERVAL)..
PUMPING(GEN,INTERVAL) =G= PUMPING_ENFORCED_ON(GEN,INTERVAL)
;
=end
=start
Q_PUMP_HARD_LO(GEN,INTERVAL)..
PUMPING(GEN,INTERVAL) =L= PUMPING_ENFORCED_OFF(GEN,INTERVAL)
;
=end
=start
Q_STORAGE_RESERVE1(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE)$(ORD(INTERVAL) GT 1)..
GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE) =L= STORAGE_LEVEL(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)
         + CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_STORAGE_RESERVE2(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE)$(ORD(INTERVAL) EQ 1)..
GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE) =L= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"INITIAL_STORAGE") + CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_MIN_PUMP_TIME(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) LE CARD(INTERVAL) - STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP_TIME")*(1/DACINTERVAL_LENGTH) + 1)..
SUM(H$( (ORD(H) GE (ORD(INTERVAL) ) ) AND (ORD(H) LE (ORD(INTERVAL) + (1/DACINTERVAL_LENGTH)*GENVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_RUN_TIME")-1)  ) ),
         PUMPING(CONVENTIONAL_STORAGE_GEN,H) )
         =G= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP_TIME")*UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL)*(1/DACINTERVAL_LENGTH)*
         (1-GEN_FORCED_OUT(CONVENTIONAL_STORAGE_GEN))
;
=end
=start
Q_MIN_PUMP_TIME2(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) GE CARD(INTERVAL) - (1/DACINTERVAL_LENGTH)*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_RUN_TIME") + 2)..
SUM(H$( (ORD(H) GE (ORD(INTERVAL) ) ) AND (ORD(H) LE CARD(INTERVAL)  ) ),PUMPING(CONVENTIONAL_STORAGE_GEN,H) )
         =G= (CARD(INTERVAL) - ORD(INTERVAL)+1)*UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES Q_PUMP_RAMP_RATE_UP(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) GT 1)..
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) - CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES         =L= 60*DACINTERVAL_LENGTH*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_RAMP_RATE")*
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES        (1-UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL))
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES          + STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL)
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES ;
=end
=start
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES Q_PUMP_RAMP_RATE_UP2(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) EQ 1)..
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) - STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"INITIAL_PUMP_MW")
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES         =L= 60*DACINTERVAL_LENGTH*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_RAMP_RATE")*
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES         (1-UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL))
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES          + STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL)
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES ;
=end
=start
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES Q_SU_PUMP_RAMPUP_TRAJECTORY1(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) GT PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN)
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES AND ORD(INTERVAL) GT 1)..
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) - CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          =L= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_RAMP_RATE")*60*DACINTERVAL_LENGTH*(PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - SUM(H$(ORD(H) LE ORD(INTERVAL) AND ORD(H) GT (ORD(INTERVAL) - PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN))),
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          ) + (DACINTERVAL_LENGTH*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")/STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_STARTUP_TIME"))*
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          (SUM(H$(ORD(H) LE ORD(INTERVAL) AND ORD(H) GT (ORD(INTERVAL) - PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN))),
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H)))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES ;
=end
=start
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES Q_SU_PUMP_RAMPUP_TRAJECTORY2(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) LE  PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN) -INTERVALS_PUMPUP_AGO(CONVENTIONAL_STORAGE_GEN)
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES AND ORD(INTERVAL) GT 1)..
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) - CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          =L= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_RAMP_RATE")*60*DACINTERVAL_LENGTH*(PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - INITIAL_PUMPUP_PERIODS(CONVENTIONAL_STORAGE_GEN) - SUM(H$(ORD(H) LE ORD(INTERVAL)),UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          ) + DACINTERVAL_LENGTH*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")/STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_STARTUP_TIME")*
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          (INITIAL_PUMPUP_PERIODS(CONVENTIONAL_STORAGE_GEN) + SUM(H$(ORD(H) LE ORD(INTERVAL)),UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H)))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES ;
=end
=start
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES Q_SU_PUMP_RAMPUP_TRAJECTORY0(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) EQ 1)..
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) - STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"INITIAL_PUMP_MW")
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES           =L= 60*DACINTERVAL_LENGTH*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_RAMP_RATE")*
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          (PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL) - (INITIAL_PUMPUP_PERIODS(CONVENTIONAL_STORAGE_GEN)
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES           + UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL))) +
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          (INITIAL_PUMPUP_PERIODS(CONVENTIONAL_STORAGE_GEN) + UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL))*
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES           DACINTERVAL_LENGTH*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")/STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_STARTUP_TIME")
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES ;
=end
=start
Q_PUMP_RAMP_RATE_DOWN(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) GT 1)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) - CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)
         =G= -1*60*DACINTERVAL_LENGTH*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_RAMP_RATE")*(1-UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,INTERVAL))
         - STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,INTERVAL)/PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)
;
=end
=start
Q_PUMP_RAMP_RATE_DOWN2(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) EQ 1)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) - STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"INITIAL_PUMP_MW")
         =G= -1*60*DACINTERVAL_LENGTH*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_RAMP_RATE")*(1-UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,INTERVAL))
         - STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,INTERVAL)/PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)
         - GEN_FORCED_OUT(CONVENTIONAL_STORAGE_GEN)*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MAX_PUMP")
;
=end
=start
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES Q_PUMP_GENLIMIT_LOW(CONVENTIONAL_STORAGE_GEN,INTERVAL)..
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) =G= PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES        - GENVALUE(CONVENTIONAL_STORAGE_GEN,"CAPACITY")*UNIT_STATUS(CONVENTIONAL_STORAGE_GEN,INTERVAL);
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES ;
=end
=start
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES Q_PUMP_GENLIMIT_LOW2(CONVENTIONAL_STORAGE_GEN,INTERVAL)..
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) -
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES        SUM(RESERVETYPE$(RESERVEVALUE(RESERVETYPE,"RESERVE_ON")EQ 1 AND (RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 1 OR RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 3)),
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES        GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE)) =G= PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES        - UNIT_STATUS(CONVENTIONAL_STORAGE_GEN,INTERVAL)*GENVALUE(CONVENTIONAL_STORAGE_GEN,"CAPACITY");
$IFI NOT '%SUSD_TRAJECTORY_CHECK%' == YES ;
=end
=start
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES Q_SU_PUMP_GENLIMITLOW_TRAJECTORY1(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) LE (CARD(INTERVAL) - PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES AND (ORD(INTERVAL) GE PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN)-1))..
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) -
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES    SUM(RESERVETYPE$(RESERVEVALUE(RESERVETYPE,"RESERVE_ON")EQ 1 AND (RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 1 OR RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 3)),
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES    GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE)) =G= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*(PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)-1)),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - SUM(H$(ORD(H) LE ORD(INTERVAL) AND ORD(H) GE (ORD(INTERVAL) - PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN) + 1)),UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          ) +
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          SUM(H$(ORD(H) LE ORD(INTERVAL) AND ORD(H) GE (ORD(INTERVAL) - PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN)+1 )),
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          (ORD(INTERVAL)-ORD(H)+1)*UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*MIN(1,DACINTERVAL_LENGTH/STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_STARTUP_TIME"))
                                          +
                                          SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)-1)),
                                          (ORD(H)-ORD(INTERVAL))*UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*MIN(1,(DACINTERVAL_LENGTH/(STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_SHUTDOWN_TIME")*60)))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - GENVALUE(CONVENTIONAL_STORAGE_GEN,"CAPACITY")*UNIT_STATUS(CONVENTIONAL_STORAGE_GEN,INTERVAL)
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES ;
=end
=start
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES Q_SU_PUMP_GENLIMITLOW_TRAJECTORY2(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) LT  PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN)-INTERVALS_PUMPUP_AGO(CONVENTIONAL_STORAGE_GEN) - 1)..
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) -
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES    SUM(RESERVETYPE$(RESERVEVALUE(RESERVETYPE,"RESERVE_ON")EQ 1 AND (RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 1 OR RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 3)),
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES    GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE)) =G= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*(PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)-1)),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - INITIAL_PUMPUP_PERIODS(CONVENTIONAL_STORAGE_GEN) - SUM(H$(ORD(H) LE ORD(INTERVAL)),UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          ) +
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          INITIAL_PUMPUP_PERIODS(CONVENTIONAL_STORAGE_GEN)*(INTERVALS_PUMPUP_AGO(CONVENTIONAL_STORAGE_GEN)+ ORD(INTERVAL))*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*MIN(1,DACINTERVAL_LENGTH/STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_STARTUP_TIME")) +
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          SUM(H$(ORD(H) LE ORD(INTERVAL) AND ORD(H) GE (ORD(INTERVAL) - PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN)+1 )),
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          (ORD(INTERVAL)-ORD(H)+1)*UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*MIN(1,DACINTERVAL_LENGTH/STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_STARTUP_TIME"))
                                          + SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)-1)),
                                          (ORD(H)-ORD(INTERVAL))*UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))*MIN(1,(DACINTERVAL_LENGTH/(STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_SHUTDOWN_TIME")*1)))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - GENVALUE(CONVENTIONAL_STORAGE_GEN,"CAPACITY")*UNIT_STATUS(CONVENTIONAL_STORAGE_GEN,INTERVAL)
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES ;
=end
=start
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES Q_SU_PUMP_GENLIMITLOW_TRAJECTORY3(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) GT  CARD(INTERVAL) - PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN))..
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) -
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES    SUM(RESERVETYPE$(RESERVEVALUE(RESERVETYPE,"RESERVE_ON")EQ 1 AND (RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 1 OR RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 3)),
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES    GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE)) =G= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*(PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE CARD(INTERVAL)),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - SUM(H$(ORD(H) LE ORD(INTERVAL) AND ORD(H) GE (ORD(INTERVAL) - PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN) + 1)),UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          ) +
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          SUM(H$(ORD(H) LE ORD(INTERVAL) AND ORD(H) GE (ORD(INTERVAL) - PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN)+1 )),
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          (ORD(INTERVAL)-ORD(H)+1)*UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*MIN(1,DACINTERVAL_LENGTH/STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_STARTUP_TIME"))
                                          +
                                          SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE CARD(INTERVAL)),
                                          (ORD(H)-ORD(INTERVAL))*UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*MIN(1,(DACINTERVAL_LENGTH/(STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_SHUTDOWN_TIME")*1)))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - UNIT_STATUS(CONVENTIONAL_STORAGE_GEN,INTERVAL)*GENVALUE(CONVENTIONAL_STORAGE_GEN,"CAPACITY")
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES ;
=end
=start
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES Q_SU_PUMP_RAMPDOWN_TRAJECTORY1(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) LE (CARD(INTERVAL) - PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES AND ORD(INTERVAL) GT 1)..
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL-1) - CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL)
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          =L= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_RAMP_RATE")*DACINTERVAL_LENGTH*60*(PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)-1)),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H)))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          + (STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")/PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          *SUM(H$(ORD(H) GE ORD(INTERVAL) AND (ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)-1))),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H)))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES ;
=end
=start
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES Q_SU_PUMP_RAMPDOWN_TRAJECTORY2(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) GT  (CARD(INTERVAL) - PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)))..
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL-1) - CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL)
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          =L= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_RAMP_RATE")*DACINTERVAL_LENGTH*60*(PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE CARD(INTERVAL)),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H)))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          + (STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")/PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          *SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE CARD(INTERVAL)),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES ;
=end
=start
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES Q_SU_PUMP_RESERVE_TRAJECTORY1(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE)$(ORD(INTERVAL) LE CARD(INTERVAL) - PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES AND (ORD(INTERVAL) GE PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN)))..
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE) =L= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MAX_PUMP")*(1
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN))),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - SUM(H$(ORD(H) LE ORD(INTERVAL) AND ORD(H) GE (ORD(INTERVAL) - PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN) + 1)),UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          )
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES ;
=end
=start
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES Q_SU_PUMP_RESERVE_TRAJECTORY2(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE)$(ORD(INTERVAL) LT  PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN)-INTERVALS_PUMPUP_AGO(CONVENTIONAL_STORAGE_GEN))..
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE) =L= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MAX_PUMP")*(1
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN))),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - INITIAL_PUMPUP_PERIODS(CONVENTIONAL_STORAGE_GEN) - SUM(H$(ORD(H) LE ORD(INTERVAL)),UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          )
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES ;
=end
=start
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES Q_SU_PUMP_RESERVE_TRAJECTORY3(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE)$(ORD(INTERVAL) GT  CARD(INTERVAL) - PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN))..
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE) =L= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MAX_PUMP")*(1
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE CARD(INTERVAL)),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          - SUM(H$(ORD(H) LE ORD(INTERVAL) AND ORD(H) GE (ORD(INTERVAL) - PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN) + 1)),UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES          )
$IFI '%SUSD_TRAJECTORY_CHECK%' == YES ;
=end
=start
Q_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) GT 1)..
UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL) - UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,INTERVAL)
         =E= PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL) - PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)
;
=end
=start
Q_PUMPUP2(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) EQ 1)..
UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL) - UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,INTERVAL)
         =E= PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL) - STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"INITIAL_PUMP_STATUS")
;
=end
=start
Q_PUMPUP3(CONVENTIONAL_STORAGE_GEN,INTERVAL)..
UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL) + UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,INTERVAL) =L= 1
;
=end
