=start
Q_STORAGE_GENERATING_START(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) EQ 1)..
STORAGE_LEVEL(CONVENTIONAL_STORAGE_GEN,INTERVAL) =E= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"INITIAL_STORAGE")
;
=end
=start
Q_STORAGE_GENERATING(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) GT 1)..
STORAGE_LEVEL(CONVENTIONAL_STORAGE_GEN,INTERVAL) =E= STORAGE_LEVEL(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)
         - GEN_EFFICIENCY(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)*(RTCINTERVAL_LENGTH/60)
         + PUMP_EFFICIENCY(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)*(RTCINTERVAL_LENGTH/60)
;
=end
=start
Q_STORAGE_GENERATING_END(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) EQ CARD(INTERVAL))..
ENDING_STORAGE(CONVENTIONAL_STORAGE_GEN) =E= STORAGE_LEVEL(CONVENTIONAL_STORAGE_GEN,INTERVAL)
         - GEN_EFFICIENCY(CONVENTIONAL_STORAGE_GEN,INTERVAL)*(RTCINTERVAL_LENGTH/60)
         + PUMP_EFFICIENCY(CONVENTIONAL_STORAGE_GEN,INTERVAL)*(RTCINTERVAL_LENGTH/60)
;
=end
=start
Q_GENPUMP(CONVENTIONAL_STORAGE_GEN,INTERVAL)..
PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL) =L= 1 - UNIT_STATUS(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_PUMPMAXLIMIT(CONVENTIONAL_STORAGE_GEN,INTERVAL)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) =L= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MAX_PUMP")*PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_PUMPMINLIMIT(CONVENTIONAL_STORAGE_GEN,INTERVAL)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) =G= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_STORAGE_MAX(STORAGE_GEN,INTERVAL)..
STORAGE_LEVEL(STORAGE_GEN,INTERVAL) =L= STORAGEVALUE(STORAGE_GEN,"STORAGE_MAX") + WASTED_STORAGE(STORAGE_GEN,INTERVAL)
;
=end
=start
Q_STORAGE_MIN(STORAGE_GEN,INTERVAL)..
STORAGE_LEVEL(STORAGE_GEN,INTERVAL) =G= 0 - WASTED_STORAGE(STORAGE_GEN,INTERVAL)
;
=end
=start
Q_PUMPMINLIMIT2(CONVENTIONAL_STORAGE_GEN,INTERVAL)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) -
         SUM(RESERVETYPE$(RESERVEVALUE(RESERVETYPE,"RESERVE_ON")EQ 1 AND (RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 1 OR RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 3)),
         GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE)) =G=         0
         + PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")
         - UNIT_STATUS(CONVENTIONAL_STORAGE_GEN,INTERVAL)*GENVALUE(CONVENTIONAL_STORAGE_GEN,"CAPACITY")
;
=end
=start
Q_PUMPMAXLIMIT2(CONVENTIONAL_STORAGE_GEN,INTERVAL)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) +
         SUM(RESERVETYPE$(RESERVEVALUE(RESERVETYPE,"RESERVE_ON")EQ 1 AND (RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 2 OR RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 3)),
         GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE))  =L=
         STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MAX_PUMP")*PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL) + GENVALUE(CONVENTIONAL_STORAGE_GEN,"CAPACITY")*UNIT_STATUS(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_STORAGE_END(CONVENTIONAL_STORAGE_GEN)$(STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"ENFORCE_FINAL_STORAGE") EQ 1)..
ENDING_STORAGE(CONVENTIONAL_STORAGE_GEN) =E= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"FINAL_STORAGE") + END_STORAGE_PENALTY_PLUS(CONVENTIONAL_STORAGE_GEN) - END_STORAGE_PENALTY_MINUS(CONVENTIONAL_STORAGE_GEN)
;
=end
=start
Q_LESR_TOTAL_GEN(LESR,INTERVAL)..
GEN_SCHEDULE(LESR,INTERVAL) =E= NC_STORAGE_GEN_SCHEDULE(LESR,INTERVAL) - NC_STORAGE_PUMP_SCHEDULE(LESR,INTERVAL)
;
=end
=start
Q_STORAGE_UNCONVENTIONAL_START(UNCONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) EQ 1)..
STORAGE_LEVEL(UNCONVENTIONAL_STORAGE_GEN,INTERVAL) =E= STORAGEVALUE(UNCONVENTIONAL_STORAGE_GEN,"INITIAL_STORAGE") - NC_STORAGE_GEN_SCHEDULE(UNCONVENTIONAL_STORAGE_GEN,INTERVAL)*(RTCINTERVAL_LENGTH/60)
         + (NC_STORAGE_PUMP_SCHEDULE(UNCONVENTIONAL_STORAGE_GEN,INTERVAL)*(RTCINTERVAL_LENGTH/60)*GENVALUE(UNCONVENTIONAL_STORAGE_GEN,"EFFICIENCY"))
;
=end
=start
Q_STORAGE_UNCONVENTIONAL1(UNCONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) GT 1)..
STORAGE_LEVEL(UNCONVENTIONAL_STORAGE_GEN,INTERVAL) =E= STORAGE_LEVEL(UNCONVENTIONAL_STORAGE_GEN,INTERVAL-1) - NC_STORAGE_GEN_SCHEDULE(UNCONVENTIONAL_STORAGE_GEN,INTERVAL)*(RTCINTERVAL_LENGTH/60)
         + (NC_STORAGE_PUMP_SCHEDULE(UNCONVENTIONAL_STORAGE_GEN,INTERVAL)*(RTCINTERVAL_LENGTH/60)*GENVALUE(UNCONVENTIONAL_STORAGE_GEN,"EFFICIENCY"))
;
=end
=start
Q_STORAGE_UNCONVENTIONAL2(UNCONVENTIONAL_STORAGE_GEN,INTERVAL)..
NC_STORAGE_GEN_SCHEDULE(UNCONVENTIONAL_STORAGE_GEN,INTERVAL) =L= GENVALUE(UNCONVENTIONAL_STORAGE_GEN,"CAPACITY")
;
=end
=start
Q_STORAGE_UNCONVENTIONAL3(UNCONVENTIONAL_STORAGE_GEN,INTERVAL)..
NC_STORAGE_PUMP_SCHEDULE(UNCONVENTIONAL_STORAGE_GEN,INTERVAL) =L= GENVALUE(UNCONVENTIONAL_STORAGE_GEN,"CAPACITY")
;
=end
=start
Q_CSP_TOTAL_GEN(CSP_GEN,INTERVAL)..
GEN_SCHEDULE(CSP_GEN,INTERVAL) =E= VG_FORECAST(INTERVAL,CSP_GEN) + NC_STORAGE_GEN_SCHEDULE(CSP_GEN,INTERVAL) - NC_STORAGE_PUMP_SCHEDULE(CSP_GEN,INTERVAL)
;
=end
=start
Q_STORAGE_RESERVE1(STORAGE_GEN,INTERVAL,RESERVETYPE)$(ORD(INTERVAL) GT 1)..
GEN_RESERVE_SCHEDULE(STORAGE_GEN,INTERVAL,RESERVETYPE) =L= STORAGE_LEVEL(STORAGE_GEN,INTERVAL-1)
         + CONVENTIONAL_PUMP_SCHEDULE(STORAGE_GEN,INTERVAL) + WASTED_STORAGE(STORAGE_GEN,INTERVAL)
;
=end
=start
Q_STORAGE_RESERVE2(STORAGE_GEN,INTERVAL,RESERVETYPE)$(ORD(INTERVAL) EQ 1)..
GEN_RESERVE_SCHEDULE(STORAGE_GEN,INTERVAL,RESERVETYPE) =L= STORAGEVALUE(STORAGE_GEN,"INITIAL_STORAGE") + CONVENTIONAL_PUMP_SCHEDULE(STORAGE_GEN,INTERVAL)
         + WASTED_STORAGE(STORAGE_GEN,INTERVAL)
;
=end
=start
Q_MIN_PUMP_TIME(RTCPUMPSHUT_GEN(CONVENTIONAL_STORAGE_GEN,INTERVAL))$(ORD(INTERVAL) LE CARD(INTERVAL)
         - STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP_TIME")*(60/RTCINTERVAL_LENGTH) + 1)..
SUM(H$( (ORD(H) GE (ORD(INTERVAL) ) ) AND (ORD(H) LE (ORD(INTERVAL) + (60/RTCINTERVAL_LENGTH)*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP_TIME")-1)  ) ),
         PUMPING(CONVENTIONAL_STORAGE_GEN,H) )
         =G= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP_TIME")*UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL)*(60/RTCINTERVAL_LENGTH)*(1-GEN_FORCED_OUT(CONVENTIONAL_STORAGE_GEN))
;
=end
=start
Q_MIN_PUMP_TIME2(RTCPUMPSHUT_GEN(CONVENTIONAL_STORAGE_GEN,INTERVAL))$(ORD(INTERVAL) GE CARD(INTERVAL) - STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP_TIME")*(60/RTCINTERVAL_LENGTH) + 2)..
SUM(H$( (ORD(H) GE (ORD(INTERVAL) ) ) AND (ORD(H) LE CARD(INTERVAL)  ) ),PUMPING(CONVENTIONAL_STORAGE_GEN,H) )
         =G= (CARD(INTERVAL) - ORD(INTERVAL)+1)*UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_SU_PUMP_RAMPUP_TRAJECTORY1(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) GT PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN) AND ORD(INTERVAL) GT 1)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) - CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)
         =L= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_RAMP_RATE")*RTCINTERVAL_LENGTH*(PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)
         - SUM(H$(ORD(H) LE ORD(INTERVAL) AND ORD(H) GT (ORD(INTERVAL) - PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN))),
         UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))
         ) + STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*(RTCINTERVAL_LENGTH/(60*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_STARTUP_TIME")))
         *SUM(H$(ORD(H) LE ORD(INTERVAL) AND ORD(H) GT (ORD(INTERVAL) - PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN))),
         UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))
         + RAMP_UP_PENALTY(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_SU_PUMP_RAMPUP_TRAJECTORY2(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) LE  PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN) AND ORD(INTERVAL) GT 1)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) - CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)
         =L= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_RAMP_RATE")*RTCINTERVAL_LENGTH*(PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)
         - INITIAL_PUMPUP_PERIODS(CONVENTIONAL_STORAGE_GEN) - SUM(H$(ORD(H) LE ORD(INTERVAL)),UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))
         ) + STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*(RTCINTERVAL_LENGTH/(60*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_STARTUP_TIME")))
         *(INITIAL_PUMPUP_PERIODS(CONVENTIONAL_STORAGE_GEN) + SUM(H$(ORD(H) LE ORD(INTERVAL)),UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H)))
         + RAMP_UP_PENALTY(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_SU_PUMP_RAMPDOWN_TRAJECTORY1(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) LE (CARD(INTERVAL) - PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)) AND ORD(INTERVAL) GT 1)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL-1) - CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL)
          =L= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_RAMP_RATE")*RTCINTERVAL_LENGTH*(PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)
          - SUM(H$(ORD(H) GE ORD(INTERVAL) AND (ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)-1))),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H)))
          + (STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*(RTCINTERVAL_LENGTH/(STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_SHUTDOWN_TIME")*60))
          *SUM(H$(ORD(H) GE ORD(INTERVAL) AND (ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)-1))),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H)))
          + RAMP_DOWN_PENALTY(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_SU_PUMP_RAMPDOWN_TRAJECTORY2(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) GT  (CARD(INTERVAL) - PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)) AND ORD(INTERVAL) GT 1)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL-1) - CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL)
         =L= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_RAMP_RATE")*RTCINTERVAL_LENGTH*(PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)
         - SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE CARD(INTERVAL)),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H)))
         + (STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*(RTCINTERVAL_LENGTH/(STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_SHUTDOWN_TIME")*60))
         *SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE CARD(INTERVAL)),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H)))
         + RAMP_DOWN_PENALTY(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_SU_PUMP_GENLIMITLOW_TRAJECTORY1(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) LE CARD(INTERVAL) - PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN) AND (ORD(INTERVAL) GE PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN)-INTERVALS_PUMPUP_AGO(CONVENTIONAL_STORAGE_GEN)))..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL)
         - SUM(RESERVETYPE$(RESERVEVALUE(RESERVETYPE,"RESERVE_ON")EQ 1 AND (RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 2 OR RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 3)),
         GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE)) =G= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*(PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)
         - SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)-1)),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))
         - SUM(H$(ORD(H) LE ORD(INTERVAL) AND ORD(H) GE (ORD(INTERVAL) - PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN)+1 )),UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))
         ) +
         SUM(H$(ORD(H) LE ORD(INTERVAL) AND ORD(H) GE (ORD(INTERVAL) - PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN)+1 )),
         (ORD(INTERVAL)-ORD(H)+1)*UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*
         MIN(1,RTCINTERVAL_LENGTH/(60*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_STARTUP_TIME")))
         +
         SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)-1)),
         (ORD(H)-ORD(INTERVAL))*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))*MIN(1,(RTCINTERVAL_LENGTH/(STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_SHUTDOWN_TIME")*60)))
         - UNIT_STATUS(CONVENTIONAL_STORAGE_GEN,INTERVAL)*GENVALUE(CONVENTIONAL_STORAGE_GEN,"CAPACITY")
;
=end
=start
Q_SU_PUMP_GENLIMITLOW_TRAJECTORY2(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) LT  PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN)-INTERVALS_PUMPUP_AGO(CONVENTIONAL_STORAGE_GEN))..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL)
         - SUM(RESERVETYPE$(RESERVEVALUE(RESERVETYPE,"RESERVE_ON")EQ 1 AND (RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 2 OR RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 3)),
         GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE)) =G= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*(PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)
         - SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)-1)),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))
         - INITIAL_PUMPUP_PERIODS(CONVENTIONAL_STORAGE_GEN) - LAST_STARTUP(CONVENTIONAL_STORAGE_GEN) - SUM(H$(ORD(H) LE ORD(INTERVAL)),UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))
         ) +
         (INITIAL_PUMPUP_PERIODS(CONVENTIONAL_STORAGE_GEN)+LAST_STARTUP(CONVENTIONAL_STORAGE_GEN))*(INTERVALS_PUMPUP_AGO(CONVENTIONAL_STORAGE_GEN)+ ORD(INTERVAL))*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*MIN(1,RTCINTERVAL_LENGTH/(60*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_STARTUP_TIME"))) +
         SUM(H$(ORD(H) LE ORD(INTERVAL)),
         (ORD(INTERVAL)-ORD(H)+1)*RTCINTERVAL_LENGTH*UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")/(60*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_STARTUP_TIME"))
         +
         SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)-1)),
         (ORD(H)-ORD(INTERVAL))*UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))*(STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*MIN(1,RTCINTERVAL_LENGTH/(STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_SHUTDOWN_TIME")*60)))
         - UNIT_STATUS(CONVENTIONAL_STORAGE_GEN,INTERVAL)*GENVALUE(CONVENTIONAL_STORAGE_GEN,"CAPACITY")
;
=end
=start
Q_SU_PUMP_GENLIMITLOW_TRAJECTORY3(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) GT  CARD(INTERVAL) - PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN) AND ORD(INTERVAL) GE PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN) - INTERVALS_PUMPUP_AGO(CONVENTIONAL_STORAGE_GEN))..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL)
         - SUM(RESERVETYPE$(RESERVEVALUE(RESERVETYPE,"RESERVE_ON")EQ 1 AND (RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 2 OR RESERVEVALUE(RESERVETYPE,"RESERVE_DIR") EQ 3)),
         GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE)) =G= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*(PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL)
         - SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE CARD(INTERVAL)),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))
         - SUM(H$(ORD(H) LE ORD(INTERVAL) AND ORD(H) GE (ORD(INTERVAL) - PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN) + 1)),UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))
         ) +
         SUM(H$(ORD(H) LE ORD(INTERVAL) AND ORD(H) GE (ORD(INTERVAL) - PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN)+1 )),
         (ORD(INTERVAL)-ORD(H)+1)*UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*MIN(1,RTCINTERVAL_LENGTH/(60*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_STARTUP_TIME")))
         +
         SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE CARD(INTERVAL) ),
         (ORD(H)-ORD(INTERVAL))*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))*MIN(1,(RTCINTERVAL_LENGTH/(STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_SHUTDOWN_TIME")*60)))
         - UNIT_STATUS(CONVENTIONAL_STORAGE_GEN,INTERVAL)*GENVALUE(CONVENTIONAL_STORAGE_GEN,"CAPACITY")
;
=end
=start
Q_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) GT 1)..
UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL) - UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,INTERVAL)
         =E= PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL) - PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL-1)
;
=end
=start
Q_PUMPUP2(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) EQ 1)..
UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL) - UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,INTERVAL)
         =E= PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL) - LAST_PUMPSTATUS(CONVENTIONAL_STORAGE_GEN)
;
=end
=start
Q_PUMPUP3(CONVENTIONAL_STORAGE_GEN,INTERVAL)..
UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL) + UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,INTERVAL) =L= 1
;
=end
=start
Q_PUMP_RAMP_RATE_UP0_BP(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) EQ 1)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) - LAST_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN) =L=
         (RTCINTERVAL_UPDATE*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_RAMP_RATE") + RAMP_SLACK_UP(CONVENTIONAL_STORAGE_GEN))
         *(PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL) - (INITIAL_PUMPUP_PERIODS(CONVENTIONAL_STORAGE_GEN)
         + UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL)))
         + (INITIAL_PUMPUP_PERIODS(CONVENTIONAL_STORAGE_GEN) + UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL))*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")
         *(RTCINTERVAL_UPDATE/(60*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_STARTUP_TIME")))
         + STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MAX_PUMP")*INITIAL_DISPATCH_SLACK("IGNORE_BP")              + RAMP_UP_PENALTY(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_PUMP_RAMP_RATE_DOWN0_BP(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) EQ 1)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) - LAST_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN) =G=
         (-1*RTCINTERVAL_UPDATE*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_RAMP_RATE")
         - RAMP_SLACK_DOWN(CONVENTIONAL_STORAGE_GEN) )*(LAST_PUMPSTATUS(CONVENTIONAL_STORAGE_GEN)
         - SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN))),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H)))
         - (SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)-1)),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))
         *STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*(RTCINTERVAL_UPDATE/(STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_SHUTDOWN_TIME")*60)))
         - GEN_FORCED_OUT(CONVENTIONAL_STORAGE_GEN)*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MAX_PUMP")
         - STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MAX_PUMP")*INITIAL_DISPATCH_SLACK("IGNORE_BP")
         - RAMP_DOWN_PENALTY(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_PUMP_RAMP_RATE_UP0_ACTUAL(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) EQ 1)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) - ACTUAL_PUMP_OUTPUT(CONVENTIONAL_STORAGE_GEN) =L= (RTC_PROCESS_TIME+RTCINTERVAL_LENGTH)*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_RAMP_RATE")
         *(PUMPING(CONVENTIONAL_STORAGE_GEN,INTERVAL) - INITIAL_PUMPUP_PERIODS(CONVENTIONAL_STORAGE_GEN) - UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL)) * (1 - UNIT_PUMPUP_ACTUAL(CONVENTIONAL_STORAGE_GEN))
         + STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP") * UNIT_PUMPUP_ACTUAL(CONVENTIONAL_STORAGE_GEN)
         + (INITIAL_PUMPUP_PERIODS(CONVENTIONAL_STORAGE_GEN) + UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,INTERVAL))*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")
         *((RTC_PROCESS_TIME+RTCINTERVAL_LENGTH)/(60*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_STARTUP_TIME")))
         + STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MAX_PUMP")*INITIAL_DISPATCH_SLACK("IGNORE_ACTUAL")   + RAMP_UP_PENALTY(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_PUMP_RAMP_RATE_DOWN0_ACTUAL(CONVENTIONAL_STORAGE_GEN,INTERVAL)$(ORD(INTERVAL) EQ 1)..
CONVENTIONAL_PUMP_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL) - ACTUAL_PUMP_OUTPUT(CONVENTIONAL_STORAGE_GEN) =G= -1*(RTC_PROCESS_TIME+RTCINTERVAL_LENGTH)*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_RAMP_RATE")
         *(LAST_PUMPSTATUS_ACTUAL(CONVENTIONAL_STORAGE_GEN) - SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN))),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H)))
         - (SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)-1)),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H)))
         *STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MIN_PUMP")*((RTC_PROCESS_TIME+RTCINTERVAL_LENGTH)/(STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"PUMP_SHUTDOWN_TIME")*60))
          - GEN_FORCED_OUT(CONVENTIONAL_STORAGE_GEN)*STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MAX_PUMP")
         - STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MAX_PUMP")*INITIAL_DISPATCH_SLACK("IGNORE_ACTUAL")
         - RAMP_DOWN_PENALTY(CONVENTIONAL_STORAGE_GEN,INTERVAL)
;
=end
=start
Q_SU_PUMP_RESERVE_TRAJECTORY1(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE)$(ORD(INTERVAL) LE CARD(INTERVAL) - PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN) AND (ORD(INTERVAL) GE PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN))-1)..
GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE) =L= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MAX_PUMP")*(1
         - SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)-1)),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))
         - SUM(H$(ORD(H) LE ORD(INTERVAL) AND ORD(H) GE (ORD(INTERVAL) - PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN) + 1)),UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))
         )
;
=end
=start
Q_SU_PUMP_RESERVE_TRAJECTORY2(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE)$(ORD(INTERVAL) LT  PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN)-1)..
GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE) =L= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MAX_PUMP")*(1
         - SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE (ORD(INTERVAL) + PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN)-1)),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))
         - INITIAL_PUMPUP_PERIODS(CONVENTIONAL_STORAGE_GEN) - SUM(H$(ORD(H) LE ORD(INTERVAL)),UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))
         )
;
=end
=start
Q_SU_PUMP_RESERVE_TRAJECTORY3(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE)$(ORD(INTERVAL) GT  CARD(INTERVAL) - PUMPDOWN_PERIOD(CONVENTIONAL_STORAGE_GEN))..
GEN_RESERVE_SCHEDULE(CONVENTIONAL_STORAGE_GEN,INTERVAL,RESERVETYPE) =L= STORAGEVALUE(CONVENTIONAL_STORAGE_GEN,"MAX_PUMP")*(1
         - SUM(H$(ORD(H) GE ORD(INTERVAL) AND ORD(H) LE CARD(INTERVAL)),UNIT_PUMPDOWN(CONVENTIONAL_STORAGE_GEN,H))
         - SUM(H$(ORD(H) LE ORD(INTERVAL) AND ORD(H) GE (ORD(INTERVAL) - PUMPUP_PERIOD(CONVENTIONAL_STORAGE_GEN) + 1)),UNIT_PUMPUP(CONVENTIONAL_STORAGE_GEN,H))
         )
;
=end